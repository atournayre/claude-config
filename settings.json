{
  "permissions": {
    "allow": [
      "Bash(bin/console:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(docker compose exec:*)",
      "Bash(find:*)",
      "Bash(gh api:*)",
      "Bash(gh issue:*)",
      "Bash(gh pr close:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh pr view:*)",
      "Bash(git add:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git commit:*)",
      "Bash(git log:*)",
      "Bash(git push:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(make grunt:*)",
      "Bash(make:*)",
      "Bash(mkdir:*)",
      "Bash(rm /tmp/pr_body*.md)",
      "Bash(tree:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:localhost)",
      "Bash(docker compose:*)",
      "Bash(composer --version)",
      "Bash(composer:*)",
      "Bash(git pull:*)",
      "Bash(php -l:*)",
      "Bash(echo:*)",
      "Bash(./vendor/bin/phpstan:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr comment:*)",
      "Bash(sentry-cli projects:*)",
      "Bash(docker exec:*)",
      "Bash(chmod:*)",
      "Bash(vendor/bin/phpstan:*)",
      "Bash(vendor/bin/phpunit:*)",
      "Bash(php:*)",
      "Bash(git rev-list:*)",
      "Bash(git shortlog:*)"
    ],
    "deny": [
      "Bash(cd :*data:*)",
      "Bash(cp :*data:*)",
      "Bash(mv :*data:*)",
      "Bash(rm :*data:*)"
    ],
    "defaultMode": "bypassPermissions"
  },
  "outputStyle": "YAML Structured",
  "statusLine": {
    "type": "command",
    "command": "python3 status_lines/status_line_v5.py",
    "padding": 0
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 hooks/pre_tool_use.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 hooks/post_tool_use.py"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 hooks/notification.py --notify"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 hooks/stop.py --chat"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 hooks/subagent_stop.py --notify"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "python3 hooks/user_prompt_submit.py --log-only --store-last-prompt --name-agent"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 hooks/pre_compact.py"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "python3 hooks/session_start.py"
          }
        ]
      }
    ]
  }
}
